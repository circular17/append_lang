
sub () "who" => "this is runtime1" print

export fun left int "+" right int -> int do `left + right` end
export fun left int "-" right int -> int do `left - right` end
export fun left int "*" right int -> int do `left * right` end
export fun left int "/" right int -> int do `left / right` end
export fun left int "%" right int -> int do `left % right` end

export sub<T> mut list1 [T] "++" list2 T do
    `list1.ref.push(...list2)`
end

export sub<T> list1 [T] "++" mut list2 T do
    `list2.ref.unshift(...list1)`
end


export sub<T> mut list [T] "push" element T do
    `list1.ref.push(element)`
end

export sub<T> mut list [T] "unshift" element T do
    `list1.ref.unshift(element)`
end

export fun<T> mut list [T] "pop" -> T do
    `list.ref.pop()`
end

export fun<T> mut list [T] "shift" -> T do
    `list.ref.shift()`
end

export fun<T> list [T] "sum" -> T do
    var result T
    list each
    | @x -> mut result + x
    result
end

export state sub value "print" do
    `console.log(value)`
end